// THIS FILE IS AUTO-GENERATED BY NETCODE PACKAGE SOURCE GENERATORS. DO NOT DELETE, MOVE, COPY, MODIFY, OR COMMIT THIS FILE.
// TO MAKE CHANGES TO THE SERIALIZATION OF A TYPE, REFER TO THE MANUAL.
#region __GHOST_COMPONENT_HAS_FIELDS__
#define COMPONENT_HAS_GHOST_FIELDS
#endregion
#region __GHOST_COMPONENT_IS_BUFFER__
#define GHOST_COMPONENT_IS_BUFFER
#endregion

using System;
using System.Runtime.CompilerServices;
using System.Diagnostics;
using Unity.Burst;
using Unity.NetCode.LowLevel.Unsafe;
using Unity.Collections.LowLevel.Unsafe;
#region __GHOST_USING_STATEMENT__
using __GHOST_USING__;
#endregion

#region __GHOST_END_HEADER__
#endregion
namespace __GHOST_NAMESPACE__
{
    internal partial struct __GHOST_NAME__GhostComponentSerializer : IGhostSerializer<
        __GHOST_COMPONENT_TYPE__, __GHOST_NAME__GhostComponentSerializer.Snapshot>
    {
        public struct Snapshot
        {
            #region __GHOST_FIELD__
            #endregion
        }
        private const int ChangeMaskBits = __GHOST_CHANGE_MASK_BITS__;

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void CopyToSnapshotGenerated(in GhostSerializerState serializerState, ref Snapshot snapshot, in __GHOST_COMPONENT_TYPE__ component)
        {
#if COMPONENT_HAS_GHOST_FIELDS
            #region __GHOST_COPY_TO_SNAPSHOT__
            #endregion
#endif
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void CopyFromSnapshotGenerated(in GhostDeserializerState deserializerState, ref __GHOST_COMPONENT_TYPE__ component,
            float snapshotInterpolationFactor, float snapshotInterpolationFactorRaw, in Snapshot snapshotBefore, in Snapshot snapshotAfter)
        {
#if COMPONENT_HAS_GHOST_FIELDS
            #region __GHOST_COPY_FROM_SNAPSHOT__
            #endregion
#endif
            #region __GHOST_COPY_FROM_SNAPSHOT_DISABLE_EXTRAPOLATION__
            snapshotInterpolationFactor = math.max(snapshotInterpolationFactorRaw, 0);
            #endregion
            #region __GHOST_COPY_FROM_SNAPSHOT_ENABLE_EXTRAPOLATION__
            snapshotInterpolationFactor = snapshotInterpolationFactorRaw;
            #endregion
            #region __GHOST_COPY_FROM_SNAPSHOT_INTERPOLATE_CLAMP_MAX__
            if (__GHOST_FIELD_NAME___DistSq > __GHOST_MAX_INTERPOLATION_DISTSQ__)
                snapshotInterpolationFactor = 0;
            #endregion
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void RestoreFromBackupGenerated(ref __GHOST_COMPONENT_TYPE__ component, in __GHOST_COMPONENT_TYPE__ backup)
        {
#if COMPONENT_HAS_GHOST_FIELDS
            #region __GHOST_RESTORE_FROM_BACKUP__
            #endregion
#endif
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void PredictDeltaGenerated(ref Snapshot snapshot, in Snapshot baseline1, in Snapshot baseline2,
            ref GhostDeltaPredictor predictor)
        {
#if COMPONENT_HAS_GHOST_FIELDS
            #region __GHOST_PREDICT__
            #endregion
#endif
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void CalculateChangeMaskGenerated(in Snapshot snapshot, in Snapshot baseline,
            [NoAlias]IntPtr changeMaskData, int startOffset)
        {
#if COMPONENT_HAS_GHOST_FIELDS
            uint changeMask;
            #region __GHOST_CALCULATE_CHANGE_MASK__
            #endregion
#endif
            #region __GHOST_FLUSH_COMPONENT_CHANGE_MASK__
            GhostComponentSerializer.CopyToChangeMask(changeMaskData, changeMask, startOffset + __GHOST_CURRENT_MASK_BITS__, 32);
            #endregion
            #region __GHOST_FLUSH_FINAL_COMPONENT_CHANGE_MASK__
            GhostComponentSerializer.CopyToChangeMask(changeMaskData, changeMask, startOffset + __GHOST_CHANGE_MASK_BITS__, __GHOST_CURRENT_MASK_BITS__);
            #endregion
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void SerializeGenerated(in Snapshot snapshot, in Snapshot baseline,
            [NoAlias]IntPtr changeMaskData, int startOffset,
            ref DataStreamWriter writer, in StreamCompressionModel compressionModel)
        {
#if COMPONENT_HAS_GHOST_FIELDS
            uint changeMask = GhostComponentSerializer.CopyFromChangeMask(changeMaskData, startOffset, ChangeMaskBits);
            #region __GHOST_WRITE__
            #endregion
#endif
            #region __GHOST_REFRESH_CHANGE_MASK__
            changeMask = GhostComponentSerializer.CopyFromChangeMask(changeMaskData, startOffset + __GHOST_CHANGE_MASK_BITS__, ChangeMaskBits - __GHOST_CHANGE_MASK_BITS__);
            #endregion
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void DeserializeGenerated(ref DataStreamReader reader,
            in StreamCompressionModel compressionModel,
            IntPtr changeMaskData, int startOffset, ref Snapshot snapshot, in Snapshot baseline)
        {
#if COMPONENT_HAS_GHOST_FIELDS
            uint changeMask = GhostComponentSerializer.CopyFromChangeMask(changeMaskData, startOffset, ChangeMaskBits);
            #region __GHOST_READ__
            #endregion
#endif
        }

#if UNITY_EDITOR || NETCODE_DEBUG
        public void ReportPredictionErrorsGenerated(in __GHOST_COMPONENT_TYPE__ component, in __GHOST_COMPONENT_TYPE__ backup, IntPtr errorsList,
            int errorsCount)
        {
            #region __GHOST_PREDICTION_ERROR_HEADER__
            var errors = GhostComponentSerializer.ConvertToUnsafeList(errorsList, errorsCount);
            int errorIndex = 0;
            #endregion
#if COMPONENT_HAS_GHOST_FIELDS
            #region __GHOST_REPORT_PREDICTION_ERROR__
            #endregion
#endif
        }

        private static int GetPredictionErrorNamesGenerated(ref FixedString512Bytes names)
        {
            var nameCount = 0;
#if COMPONENT_HAS_GHOST_FIELDS
            #region __GHOST_GET_PREDICTION_ERROR_NAME__
            #endregion
#endif
            return nameCount;
        }
#endif
    }

    //Registration
    [BurstCompile]
    [System.Runtime.CompilerServices.CompilerGenerated]
    internal partial struct __GHOST_NAME__GhostComponentSerializer : IGhostSerializer<
        __GHOST_COMPONENT_TYPE__, __GHOST_NAME__GhostComponentSerializer.Snapshot>
    {
        static public GhostComponentSerializer.State GetState(ref SystemState state)
        {
            // This needs to be lazy initialized because otherwise there is a depenency on the static initialization order which breaks il2cpp builds, due to TypeManager not being initialized yet.
            // Also, Burst function pointer compilation can take a while.
            if (!s_StateInitialized)
            {
                s_State = new GhostComponentSerializer.State
                {
                    GhostFieldsHash = __GHOST_FIELD_HASH__,
                    ComponentType = ComponentType.ReadWrite<__GHOST_COMPONENT_TYPE__>(),
                    ComponentSize = UnsafeUtility.SizeOf<__GHOST_COMPONENT_TYPE__>(),
                    SnapshotSize = UnsafeUtility.SizeOf<Snapshot>(),
                    ChangeMaskBits = __GHOST_CHANGE_MASK_BITS__,
                    PrefabType = __GHOST_PREFAB_TYPE__,
                    SendMask = __GHOST_SEND_MASK__,
                    SendToOwner = __GHOST_SEND_OWNER__,
                    VariantHash = __GHOST_VARIANT_HASH__,
                    SerializationStrategyIndex = -1,
                    SerializesEnabledBit = __GHOST_SERIALIZES_ENABLED_BIT__,
#if UNITY_EDITOR || NETCODE_DEBUG
                    ProfilerMarker = new Unity.Profiling.ProfilerMarker("__GHOST_COMPONENT_TYPE__"),
                    VariantTypeFullNameHash = TypeHash.FNV1A64("__GHOST_VARIANT_TYPE__")
#endif
                };
                // UnsafeUtility.SizeOf<T> reports 1 with zero-sized components.
                if (s_State.ComponentType.IsZeroSized)
                    s_State.ComponentSize = 0;

                #region __GHOST_HAS_NO_GHOST_FIELDS__
                s_State.SnapshotSize = 0;
                #endregion
#if UNITY_EDITOR || NETCODE_DEBUG
                s_State.ProfilerMarker.Begin();
                var innerMarker = new Unity.Profiling.ProfilerMarker("__GHOST_NAME__");
                innerMarker.Begin();
#endif
#if !GHOST_COMPONENT_IS_BUFFER
                s_StateInitialized = Unity.NetCode.ComponentSerializationHelper<
                    __GHOST_COMPONENT_TYPE__,
                    Snapshot,
                    __GHOST_NAME__GhostComponentSerializer
                >.SetupFunctionPointers(ref s_State, ref state);
#else
                s_StateInitialized = Unity.NetCode.BufferSerializationHelper<
                    __GHOST_COMPONENT_TYPE__,
                    Snapshot,
                    __GHOST_NAME__GhostComponentSerializer
                >.SetupFunctionPointers(ref s_State, ref state);
#endif
                //TODO: DOTS-7926 we should understand why we have in some cases a StackOverflowException.
                //UNCOMMENT THIS LINE TO DEBUG IF A BIG COMPONENT MAY BE CAUSING A STACK OVERFLOW
                // const int maxSizeToAvoidStackOverflow = 4_500;
                // if (s_State.ComponentSize > maxSizeToAvoidStackOverflow)
                // {
                //     UnityEngine.Debug.LogWarning($"The type '{s_State.ComponentType}' is very large ({s_State.ComponentSize} bytes)! There is a risk of StackOverflowExceptions in the Serializers at roughly {maxSizeToAvoidStackOverflow} bytes! Remove large fields.");
                // }
#if UNITY_EDITOR || NETCODE_DEBUG
                s_State.NumPredictionErrors = GetPredictionErrorNamesGenerated(ref s_State.PredictionErrorNames);
#endif

#if UNITY_EDITOR || NETCODE_DEBUG
                innerMarker.End();
                s_State.ProfilerMarker.End();
#endif
            }
            return s_State;
        }
        private static bool s_StateInitialized;
        private static GhostComponentSerializer.State s_State;
    }
}
