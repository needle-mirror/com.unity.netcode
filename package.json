{"name":"com.unity.netcode","displayName":"Netcode for Entities","version":"1.5.0-exp.2","unity":"2022.3","unityRelease":"11f1","description":"Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.","dependencies":{"com.unity.transport":"2.4.0","com.unity.entities":"1.3.9","com.unity.modules.animation":"1.0.0"},"repository":{"revision":"46978bc6a8537e0e6706f8e83c16356bf39eede4","type":"git","url":"https://github.cds.internal.unity3d.com/unity/dots.git"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.netcode@1.5/manual/index.html","_upm":{"changelog":"### Changed\n\n* Added more sections to the documentation with information about what to look out for during a host migration.\n* Renamed `HostMigration.MigrateServerData` to `HostMigration.SetHostMigrationData` and made it public. It's the counterpart to `GetHostMigrationData`. `MigrateDataToNewServerWorld` is now optional to use.\n* Added a world parameter to the public APIs `GetHostMigrationData`/`TryGetHostMigrationData`.\n\n### Fixed\n\n* Issue where the relay connection setup would fail after host migrations. Stopped using fixed listening ports on the server.\n* Issue with incorrect host migration size being uploaded. When the host migration data blob was small it would cause errors during deployment.\n* Issue when the host configuration part of the migration data was over 1KB in size."}}