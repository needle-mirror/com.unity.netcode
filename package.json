{"name":"com.unity.netcode","displayName":"Netcode for Entities","version":"1.5.0-exp.100","unity":"2022.3","unityRelease":"11f1","description":"Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.","dependencies":{"com.unity.transport":"2.4.0","com.unity.entities":"1.3.9","com.unity.modules.animation":"1.0.0"},"repository":{"revision":"71eac4363107878215b1cba1eb4b1e2a026bf190","type":"git","url":"https://github.cds.internal.unity3d.com/unity/dots.git"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.netcode@1.5/manual/index.html","_upm":{"changelog":"### Changed\n\n* Big documentation overhaul for host migration feature.\n* Don't add input component buffers to host migration data. These can cause issues after host migration when they have inputs event counters set to some value where the migrated clients will be start counts starting from 0. The increment/decrement mechanism breaks.\n* Ghost IDs and spawn ticks in the `GhostInstance` component will now be preserved for non-prespawn ghosts between host migrations.\n\n### Fixed\n\n* UpdateSize in the `HostMigrationStats` component is now correct when using compression\n* Issue with the native list size being incorrectly re-sized in `HostMigration.GetHostMigrationData`\n* Test failures when packet dumps are enabled\n* Issue where old prespawn snapshot data would still exist for clients after a host migration causing deserialization errors."}}