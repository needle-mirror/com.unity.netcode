{
  "name": "com.unity.netcode",
  "displayName": "Netcode for Entities",
  "version": "1.9.1",
  "unity": "2022.3",
  "unityRelease": "20f1",
  "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
  "dependencies": {
    "com.unity.transport": "2.5.3",
    "com.unity.entities": "1.3.5",
    "com.unity.modules.animation": "1.0.0"
  },
  "_upm": {
    "changelog": "### Changed\n\n* Host migration system now caches the ghost component types it uses when collecting host migration ghost data, resulting in faster host migration data collections. It's updated any time the ghost prefab count changes.\n* `GhostField.Quantization` template mismatch errors are now warnings, and will resolve to working code, rather than outputting errors. As a result, we will no longer assume primitive integer types want to disable quantization, as that logic did not cover all cases (e.g. like `Entity` structs etc).\n* Host migration internal ghost data gathering has improved and should be faster now but add a few bytes of extra data compared to before.\n\n### Fixed\n\n* Occasional `MultiplayerPlayModeWindow.HandleHyperLinkArgs` truncation error spam.\n* Unsafe compiler error when using a `fixed` array as a `GhostField`. [Note: You must implement a corresponding safe accessor method implementing ref returns](https://docs.unity3d.com/Packages/com.unity.netcode@latest?subfolder=/manual/ghost-types-templates.html#supporting-unsafe-fixed-tconst).\n* `GhostField` compiler error when using `FixedList` with nested `struct` types, as well as related `InvalidOperationException` in a `SubString` call when using a `FixedList` with a primitive type.\n* Code generator incorrectness when generating struct fields for `GhostField` `FixedList` and `fixed` array serializers (`Entity` fields in particular).\n* Incorrect `curChangeMaskBits` offset after a `FixedList` field is generated, due to incorrect `aggregateChangeMask` flag. It's now forced correct via `forceComposite`.\n* `FixedList`'s and `unsafe fixed array`) now correctly support non-public structs for the element type (in cases where we know the code-gen will resolve without compiler errors).\n* `GhostSnapshotValueEntity` now uses `TryGetValue` rather than a `HasComponent` call followed by a lookup, reducing lookup costs.\n* Issue where specifying a `LogLevel` (via the `Default.globalconfig`'s `unity.netcode.sourcegenerator.logging_level` property) did nothing."
  },
  "upmCi": {
    "footprint": "d0e43b566f63e8c5169fbff17d64a05bcec2e802"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode@1.9/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
    "type": "git",
    "revision": "018413d9403ace3e3f74b5a55a138cdf666b1940"
  }
}
