{
  "name": "com.unity.netcode",
  "displayName": "Netcode for Entities",
  "version": "1.2.0-exp.3",
  "unity": "2022.3",
  "unityRelease": "11f1",
  "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
  "dependencies": {
    "com.unity.transport": "2.1.0",
    "com.unity.entities": "1.2.0-exp.3",
    "com.unity.modules.animation": "1.0.0"
  },
  "_upm": {
    "changelog": "### Added\n\n* `GhostInputSystemGroup` and `GhostSimulationSystemGroup` are now included in the LocalSimulation world, which means your Input polling systems will now automatically get added to the LocalWorld. This helps facilitate support for singleplayer testing workflows. LocalWorld performance is unaffected (as it's a negligible overhead to tick these empty `SystemGroup`s).\n* support for GameObject rendering for debug bounding boxes. Entities Graphics was already supported, this adds support for GameObjects rendering. See Playmode Tools in docs for more details.\n* `ConvertToGhostPrefab` will now set the `EntityName` to the configured GhostName (if null). Useful for dynamically created Entity prefabs.\n* components, buffers and commands that implement generic interfaces that inherit from the IComponentData and IBufferElementData (i.e IComponentData) are now detected correctly and serialization code generated.\n\n### Changed\n\n* mostly for maintenance, code-generation for the component and buffer serialiser, using helper methods living all inside the package. No user visible changes\n* Updated Transport dependency to version 2.1.0.\n* The minimum supported editor version is now 2022.3.11f1\n* all Simulate component enable states are reset to using a job instead of doing that synchronously on the main thread. Reason for the change is the fact this was inducing a big stall at the end of the Prediction loop. However, the benefits is only visible when there are a large number of jobified workload.\n* components, command, buffers and rpc are now replicated also if they are private or internal\n\n### Removed\n\n* dependency from com.unity.logging. Before, in order to use Netcode for Entities, the logging package was required. Now it is optional.\n\n### Fixed\n\n* We now correctly throw a `PlatformNotSupportedException` in the three locations we previously threw `NotImplementedException`s in `ClientServerBootStrap` (methods; `CreateServerWorld`, `CreateClientWorld`, and `CreateThinClientWorld`).\n* when the server change owner for a ghost configured as owner-predicted, the ghost automatically switch the operation mode from interpolated to predicted (or vice versa) based on the owner.\n* an issue with \"partial component\" send optimisation (component present only on interpolated or predicted ghost, or based on the owner) that was causing data being deserialised incorrectly.\n* an issue with enable-bits serialisation not respecting the SendToOwner property set in the GhostComponentAttribute, cluttering the state always with the latest server data, regardless of the setting.\n* an issue with code-gen when using combination of flags for the GhostComponent.PrefabType property.\n* `Error: Invalid context argument index` errors when using the Timeout feature of the PlayMode Tools.\n* Updated log message for overriding variants rule\n* `IndexOutOfRangeException` in the `GhostCollectionSystem` when ghost hash mismatches are present (a common error during dev).\n* An issue accessing the m_PredictionSwitchingSmoothingLookup buffer when multiple ghosts change their owner and they need to switch prediction mode.\n* GhostPrefabCreation.ConvertToGhostPrefab api that incorrectly replicated and assign to child entity components the root entity variant."
  },
  "upmCi": {
    "footprint": "a16254d0b89718efee03c81626c172b5e34fbb2a"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode@1.2/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
    "type": "git",
    "revision": "9bfd95fb576e8fa710c8544b6706bdd73e25afef"
  }
}
